{
	"info": {
		"_postman_id": "b560619a-ef6a-444b-8748-4f1f9a64e7a3",
		"name": "express-db-template",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "3252663"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"register succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const {username,password} = JSON.parse(pm.request.body.raw);\r",
									"    const { token,message } = response;\r",
									"    pm.expect(message).to.eql(undefined);\r",
									"    if (!message) {\r",
									"        pm.environment.set(\"Token\", token);\r",
									"        pm.environment.set(\"username\", username);\r",
									"        pm.environment.set(\"password\", password);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"binhong{{$randomInt}}\",\r\n    \"password\":\"123456\",\r\n    \"biography\":\"biography\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/register",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"login succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const { token,message } = response;\r",
									"    pm.expect(message).to.eql(undefined);\r",
									"    if (!message) {\r",
									"        pm.environment.set(\"Token\", token);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"{{username}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/login",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"fetch user list succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const { message } = response;\r",
									"    pm.expect(message).to.eql(undefined);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/user/list",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"user",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"fetch current user succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const { message } = response;\r",
									"    pm.expect(message).to.eql(undefined);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/user/me",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"edit current user succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const { message } = response;\r",
									"    pm.expect(message).to.eql('success');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"{{username}}{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/user/me",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"user",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"edit current user succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const { message } = response;\r",
									"    pm.expect(message).to.eql('success');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"{{username}}{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/logout",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Utils",
			"item": [
				{
					"name": "upload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"edit current user succeed\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    const { message } = response;\r",
									"    pm.expect(message).to.eql('success');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"{{username}}{{$randomInt}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{Host}}:{{PORT}}/upload",
							"protocol": "http",
							"host": [
								"{{Host}}"
							],
							"port": "{{PORT}}",
							"path": [
								"upload"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}